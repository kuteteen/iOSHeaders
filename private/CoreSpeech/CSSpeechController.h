//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  7 2017 08:40:43).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <CoreSpeech/CSAudioConverterDelegate-Protocol.h>
#import <CoreSpeech/CSSpeechManagerDelegate-Protocol.h>

@class CSAudioConverter, CSEndpointerProxy, CSSpeechManager, NSDictionary, NSString;
@protocol CSEndpointAnalyzer, CSSpeechControllerDelegate, OS_dispatch_queue;

@interface CSSpeechController : NSObject <CSSpeechManagerDelegate, CSAudioConverterDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    CSAudioConverter *_audioConverter;
    NSDictionary *_requestedRecordSettings;
    NSDictionary *_lastVoiceTriggerInfo;
    _Bool _isOpus;
    _Bool _isActivated;
    id <CSSpeechControllerDelegate> _delegate;
    CSEndpointerProxy *_endpointerProxy;
    CSSpeechManager *_speechManager;
    NSDictionary *_avvcContext;
    unsigned long long _activeChannel;
}

+ (id)sharedController;
@property(nonatomic) unsigned long long activeChannel; // @synthesize activeChannel=_activeChannel;
@property(nonatomic) _Bool isActivated; // @synthesize isActivated=_isActivated;
@property(nonatomic) _Bool isOpus; // @synthesize isOpus=_isOpus;
@property(retain, nonatomic) NSDictionary *avvcContext; // @synthesize avvcContext=_avvcContext;
@property(nonatomic) __weak CSSpeechManager *speechManager; // @synthesize speechManager=_speechManager;
@property(retain, nonatomic) CSEndpointerProxy *endpointerProxy; // @synthesize endpointerProxy=_endpointerProxy;
@property(nonatomic) __weak id <CSSpeechControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)shouldAcceptEagerResultForDuration:(double)arg1 resultsCompletionHandler:(CDUnknownBlockType)arg2;
- (void)updateEndpointerDelayedTrigger:(_Bool)arg1;
- (void)updateEndpointerThreshold:(float)arg1;
- (id)endpointerModelVersion;
- (double)lastEndOfVoiceActivityTime;
- (id)_getRecordSettings;
- (id)_contextToString:(id)arg1;
- (void)processServerEndpointFeatures:(id)arg1;
- (void)resetEndpointer;
- (long long)_currentAudioRecorderSampleRate;
- (void)setEndpointAnalyzerDelegate:(id)arg1;
@property(readonly, nonatomic) id <CSEndpointAnalyzer> endpointAnalyzer;
- (id)metrics;
- (void)keywordDetectorDidDetectKeyword;
- (void)voiceTriggerDidDetectTwoShotAtTime:(double)arg1;
- (void)voiceTriggerDidDetectKeyword:(id)arg1;
- (id)voiceTriggerInfo;
- (unsigned long long)outputReferenceChannel;
- (float)averagePowerForOutputReference;
- (float)peakPowerForOutputReference;
- (float)averagePowerForChannel:(unsigned long long)arg1;
- (float)peakPowerForChannel:(unsigned long long)arg1;
- (void)updateMeters;
- (void)setMeteringEnabled:(_Bool)arg1;
- (_Bool)playRecordStartingAlertAndResetEndpointer;
- (unsigned long long)alertStartTime;
- (_Bool)playAlertSoundForType:(long long)arg1;
- (_Bool)setAlertSoundFromURL:(id)arg1 forType:(long long)arg2;
- (void)audioConverterDidConvertPackets:(id)arg1 packets:(id)arg2 timestamp:(unsigned long long)arg3;
- (void)_setupAudioConverter:(_Bool)arg1;
- (id)speechManagerRecordingContext;
- (void)speechManagerDidStopForwarding:(id)arg1 forReason:(long long)arg2;
- (void)speechManagerDidStartForwarding:(id)arg1 successfully:(_Bool)arg2 error:(id)arg3;
- (void)speechManagerRecordBufferAvailable:(id)arg1 buffer:(id)arg2;
- (void)speechManagerLPCMRecordBufferAvailable:(id)arg1 chunk:(id)arg2;
- (_Bool)_isVoiceTriggered;
- (_Bool)isVoiceTriggered;
- (id)recordRoute;
- (_Bool)isRecording;
- (void)stopRecording;
- (_Bool)startRecording:(id *)arg1;
- (_Bool)startRecordingWithSettings:(id)arg1 error:(id *)arg2;
@property(nonatomic) _Bool duckOthersOption;
- (double)getRecordBufferDuration;
- (_Bool)setRecordBufferDuration:(double)arg1;
- (void)setSynchronousCallbackEnabled:(_Bool)arg1;
- (struct AudioStreamBasicDescription)getLPCMAudioStreamBasicDescription;
- (id)recordSettings;
- (void)releaseAudioSession:(unsigned long long)arg1;
- (void)releaseAudioSession;
- (void)resetAudioSession;
- (void)prewarmAudioSession;
- (void)preheat;
- (_Bool)setCurrentContext:(id)arg1 error:(id *)arg2;
- (_Bool)prepareRecordWithSettings:(id)arg1 error:(id *)arg2;
- (_Bool)initializeRecordSessionWithContext:(id)arg1;
- (id)initWithManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

