//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GEODataSessionTask.h"
#import "GEODataSessionUpdatableTask.h"
#import "GEODataXPCSessionTaskQueueTask.h"
#import "GEOStateCapturing.h"

@class GEOClientMetrics, GEODataRequest, GEODataXPCSession, NSData, NSError, NSObject<OS_dispatch_queue>, NSObject<OS_os_activity>, NSObject<OS_voucher>, NSObject<OS_xpc_object>, NSString;

__attribute__((visibility("hidden")))
@interface GEODataXPCSessionTask : NSObject <GEODataXPCSessionTaskQueueTask, GEOStateCapturing, GEODataSessionTask, GEODataSessionUpdatableTask>
{
    GEODataXPCSession *_session;
    id <GEODataSessionTaskDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSObject<OS_dispatch_queue> *_sessionIsolation;
    GEODataRequest *_request;
    NSData *_receivedData;
    NSError *_error;
    unsigned long long _stateCaptureHandle;
    double _startTime;
    double _endTime;
    unsigned int _taskIdentifier;
    NSObject<OS_os_activity> *_activity;
    NSObject<OS_voucher> *_voucher;
    float _priority;
    _Bool _canceled;
    _Bool _didNotifyDelegate;
    id <NSObject> _parsedResponse;
}

@property(readonly, nonatomic) unsigned int taskIdentifier; // @synthesize taskIdentifier=_taskIdentifier;
@property(nonatomic) _Bool didNotifyDelegate; // @synthesize didNotifyDelegate=_didNotifyDelegate;
@property(readonly, nonatomic) __weak id <GEODataSessionTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak GEODataXPCSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) GEODataRequest *request; // @synthesize request=_request;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *sessionIsolation; // @synthesize sessionIsolation=_sessionIsolation;
@property(readonly, nonatomic) NSData *receivedData; // @synthesize receivedData=_receivedData;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(readonly, nonatomic) NSObject<OS_os_activity> *activity; // @synthesize activity=_activity;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <GEORequestCounterTicket> requestCounterTicket;
@property(readonly, nonatomic) NSString *remoteAddressAndPort;
@property(readonly, nonatomic) GEOClientMetrics *clientMetrics;
- (void)setParsedResponse:(id)arg1;
@property(readonly, nonatomic) id <NSObject> parsedResponse;
@property(retain, nonatomic) NSError *error;
@property(readonly, nonatomic) unsigned long long incomingPayloadSize;
@property(readonly, nonatomic) unsigned long long outgoingPayloadSize;
@property(readonly, nonatomic) _Bool protocolBufferHasPreamble;
@property float priority;
- (unsigned long long)updateXPCRequestIdentifier;
@property(readonly, nonatomic) unsigned long long xpcRequestIdentifier;
@property(readonly, nonatomic) NSObject<OS_xpc_object> *xpcRequest;
@property(readonly, nonatomic) _Bool failedDueToCancel;
- (void)cancel;
- (void)start;
- (void)dealloc;
- (id)initWithSession:(id)arg1 request:(id)arg2 delegate:(id)arg3 delegateQueue:(id)arg4;
- (id)init;
- (void)notifyDelegate;
- (_Bool)processFailedReplyXPCDictionary:(id)arg1;
- (_Bool)processReplyXPCDictionary:(id)arg1;
- (void)_finishAndNotifyDelegate;
- (void)processXPCReply:(id)arg1 error:(id)arg2;
- (void)processTaskTimeout;
- (void)processTaskCancelled;
@property(readonly, nonatomic) unsigned int taskQueue;
@property(readonly, nonatomic) double timeoutInterval;
@property(readonly, nonatomic) float taskQueuePriority;
- (void)processResult:(int)arg1 xpcReply:(id)arg2 error:(id)arg3;
- (void)willSendTask:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool isCancelled;
@property(readonly) double elapsedTime;
- (id)captureStateWithHints:(struct os_state_hints_s *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

