//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  7 2017 08:40:43).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <NeutrinoCore/NURenderNode.h>

@class NSError, NSObject, NURenderContext, NUSourceNode;
@protocol OS_dispatch_queue;

@interface NUCacheNode : NURenderNode
{
    NSObject<OS_dispatch_queue> *_queue;
    NURenderContext *_renderContext;
    NUSourceNode *_sourceNode;
    NSError *_sourceError;
    long long _subsampleFactor;
}

+ (void)clearCacheDirectory;
+ (long long)_maxCacheDirectorySize;
+ (void)_pruneCacheDirectory:(id)arg1 toSize:(long long)arg2;
+ (void)_ensureCacheDirectoryURL:(id)arg1;
+ (id)cacheDirectoryURL;
+ (id)nodeWithInput:(id)arg1 settings:(id)arg2 pipelineState:(id)arg3 error:(out id *)arg4;
+ (id)registry;
@property(readonly, nonatomic) long long subsampleFactor; // @synthesize subsampleFactor=_subsampleFactor;
- (void).cxx_destruct;
- (_Bool)requiresAudioMix;
- (_Bool)requiresVideoComposition;
- (id)_evaluateVideoComposition:(out id *)arg1;
- (id)_evaluateVideo:(out id *)arg1;
- (id)_evaluateImage:(out id *)arg1;
- (id)_evaluateImageGeometry:(out id *)arg1;
- (id)newRenderRequestWithOriginalRequest:(id)arg1 persistentURL:(id)arg2 error:(out id *)arg3;
- (id)cacheIdentifier;
- (id)generatePersistentURLWithExtension:(id)arg1;
- (id)resolvedSourceNode:(out id *)arg1;
- (void)resolveWithSourceNode:(id)arg1 error:(id)arg2;
- (_Bool)isResolved;
- (id)evaluateRenderDependenciesWithRequest:(id)arg1 error:(out id *)arg2;
- (_Bool)tryLoadPersistentURL:(id)arg1 error:(out id *)arg2;
- (id)persistentURL;
- (id)nodeByReplayingAgainstCache:(id)arg1 pipelineState:(id)arg2 error:(out id *)arg3;
- (_Bool)isEqualToRenderNode:(id)arg1;
- (void)nu_updateDigest:(id)arg1;
- (unsigned long long)_hash;
@property(readonly, nonatomic) NURenderNode *inputNode;
- (id)descriptionSubClassHook;
- (void)resolveSourceWithResponse:(struct NUResponse *)arg1;
- (id)initWithInput:(id)arg1 settings:(id)arg2 subsampleFactor:(long long)arg3;
- (id)initWithInput:(id)arg1 settings:(id)arg2;
- (id)initWithSettings:(id)arg1 inputs:(struct NSDictionary *)arg2;

@end

