//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  7 2017 08:40:43).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <MusicCarDisplayUI/MCDNowPlayingViewControllerDataSource-Protocol.h>
#import <MusicCarDisplayUI/MCDNowPlayingViewControllerDelegate-Protocol.h>
#import <MusicCarDisplayUI/MPRequestResponseControllerDelegate-Protocol.h>
#import <MusicCarDisplayUI/UITableViewDataSource-Protocol.h>
#import <MusicCarDisplayUI/UITableViewDelegate-Protocol.h>

@class AVExternalDevice, CADisplayLink, MCDPCModel, MPArtworkCatalog, MPRequestResponseController, NSString, UIAlertController, UIImage, UITableView;
@protocol MCDPlayableContentQueueManagerDelegate;

@interface MCDPlayableContentPlaybackManager : NSObject <MPRequestResponseControllerDelegate, UITableViewDelegate, UITableViewDataSource, MCDNowPlayingViewControllerDataSource, MCDNowPlayingViewControllerDelegate>
{
    _Bool _limitedUI;
    _Bool _seeking;
    UITableView *_tableView;
    MPRequestResponseController *_requestController;
    UIAlertController *_alertController;
    id <MCDPlayableContentQueueManagerDelegate> _delegate;
    AVExternalDevice *_externalDevice;
    UIImage *_albumArtwork;
    MPArtworkCatalog *_artworkCatalog;
    MCDPCModel *_model;
    CADisplayLink *_displayLink;
    double _elapsedTime;
}

@property(nonatomic) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(retain, nonatomic) MCDPCModel *model; // @synthesize model=_model;
@property(retain, nonatomic) MPArtworkCatalog *artworkCatalog; // @synthesize artworkCatalog=_artworkCatalog;
@property(retain, nonatomic) UIImage *albumArtwork; // @synthesize albumArtwork=_albumArtwork;
@property(retain, nonatomic) AVExternalDevice *externalDevice; // @synthesize externalDevice=_externalDevice;
@property(nonatomic) __weak id <MCDPlayableContentQueueManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(nonatomic, getter=isSeeking) _Bool seeking; // @synthesize seeking=_seeking;
@property(retain, nonatomic) MPRequestResponseController *requestController; // @synthesize requestController=_requestController;
@property(nonatomic) _Bool limitedUI; // @synthesize limitedUI=_limitedUI;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)nowPlayingViewControllerMore:(id)arg1;
- (_Bool)nowPlayingViewControllerCanShowMore:(id)arg1;
- (id)nowPlayingViewControllerGetPlaybackRate:(id)arg1;
- (void)nowPlayingViewControllerChangePlaybackRate:(id)arg1;
- (_Bool)nowPlayingViewControllerCanShowChangePlaybackRate:(id)arg1;
- (void)nowPlayingViewControllerToggleRepeat:(id)arg1;
- (_Bool)nowPlayingViewControllerCanRepeat:(id)arg1;
- (void)nowPlayingViewControllerToggleShuffle:(id)arg1;
- (_Bool)nowPlayingViewControllerCanShuffle:(id)arg1;
- (id)_alertActionForFeedbackCommand:(id)arg1 fallbackTitle:(id)arg2;
- (void)_handleHamburgerActionSheet;
- (void)nowPlayingViewController:(id)arg1 didSendAction:(long long)arg2 state:(long long)arg3;
- (_Bool)nowPlayingViewController:(id)arg1 buttonShouldBeActive:(long long)arg2;
- (id)_skipIntervalButtonImageForInterval:(double)arg1;
- (_Bool)nowPlayingViewController:(id)arg1 shouldDisplayButton:(long long)arg2 withImage:(out id *)arg3 existingIdentifier:(id)arg4 tinted:(out _Bool *)arg5;
- (double)_jumpBackwardInterval;
- (double)_jumpForwardInterval;
- (long long)repeatTypeForNowPlayingViewController:(id)arg1;
- (long long)shuffleTypeForNowPlayingViewController:(id)arg1;
- (_Bool)nowPlayingViewControllerIsPlaying:(id)arg1;
- (_Bool)playbackIsLiveStreamForNowPlayingViewController:(id)arg1;
- (double)playbackElapsedTimeForNowPlayingViewController:(id)arg1;
- (double)playbackDurationForNowPlayingViewController:(id)arg1;
- (_Bool)nowPlayingViewControllerIsShowingExplicitTrack:(id)arg1;
- (id)backgroundArtForNowPlayingController:(id)arg1;
- (id)titleForNowPlayingController:(id)arg1;
- (id)albumTextForNowPlayingController:(id)arg1;
- (id)artistTextForNowPlayingController:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)controller:(id)arg1 defersResponseReplacement:(CDUnknownBlockType)arg2;
- (void)_displayLinkTick:(id)arg1;
- (void)_processArtwork;
- (void)_performChangeRequest:(id)arg1;
- (id)_currentlyPlayingSong;
- (id)_currentlyPlayingItem;
- (id)_songForIndexPath:(id)arg1;
- (id)_itemAtIndexPath:(id)arg1;
- (id)_adjustedIndexPathForPlaybackQueue:(id)arg1;
- (long long)_numberOfItemsInPlaybackQueue;
- (void)_limitedUIChanged:(id)arg1;
- (id)_setupRequest;
- (void)_performRequest;
- (void)viewWillDisappear;
- (void)endRequestObservation;
- (void)beginRequestObservation;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 model:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

