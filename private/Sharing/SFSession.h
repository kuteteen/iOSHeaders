//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  7 2017 08:40:43).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Sharing/NSSecureCoding-Protocol.h>
#import <Sharing/SFXPCInterface-Protocol.h>

@class NSString, NSUUID, NSXPCConnection, NSXPCListenerEndpoint, SFDevice;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_os_transaction;

@interface SFSession : NSObject <NSSecureCoding, SFXPCInterface>
{
    _Bool _activateCalled;
    _Bool _activateInProgress;
    _Bool _activateCompleted;
    struct CryptoAEADPrivate *_encryptionReadAEAD;
    unsigned char _encryptionReadNonce[12];
    struct CryptoAEADPrivate *_encryptionWriteAEAD;
    unsigned char _encryptionWriteNonce[12];
    _Bool _invalidateCalled;
    _Bool _invalidateDone;
    unsigned long long _heartbeatLastTicks;
    NSObject<OS_dispatch_source> *_heartbeatTimer;
    _Bool _heartbeatWaiting;
    CDUnknownBlockType _pairSetupCompletion;
    _Bool _pairSetupEnded;
    unsigned int _pairSetupFlags;
    struct PairingSessionPrivate *_pairSetupSession;
    CDUnknownBlockType _pairVerifyCompletion;
    _Bool _pairVerifyEnded;
    unsigned int _pairVerifyFlags;
    struct PairingSessionPrivate *_pairVerifySession;
    struct NSMutableDictionary *_requestQueue;
    NSObject<OS_os_transaction> *_transaction;
    NSXPCConnection *_xpcCnx;
    unsigned char _serviceType;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    CDUnknownBlockType _errorHandler;
    NSUUID *_identifier;
    CDUnknownBlockType _interruptionHandler;
    CDUnknownBlockType _invalidationHandler;
    SFDevice *_peerDevice;
    CDUnknownBlockType _promptForPINHandler;
    CDUnknownBlockType _receivedObjectHandler;
    NSString *_serviceIdentifier;
    CDUnknownBlockType _eventMessageHandler;
    CDUnknownBlockType _requestMessageHandler;
    CDUnknownBlockType _receivedFrameHandler;
    CDUnknownBlockType _responseMessageInternalHandler;
    NSUUID *_serviceUUID;
    NSXPCListenerEndpoint *_testListenerEndpoint;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSXPCListenerEndpoint *testListenerEndpoint; // @synthesize testListenerEndpoint=_testListenerEndpoint;
@property(copy, nonatomic) NSUUID *serviceUUID; // @synthesize serviceUUID=_serviceUUID;
@property(nonatomic) unsigned char serviceType; // @synthesize serviceType=_serviceType;
@property(copy, nonatomic) CDUnknownBlockType responseMessageInternalHandler; // @synthesize responseMessageInternalHandler=_responseMessageInternalHandler;
@property(copy, nonatomic) CDUnknownBlockType receivedFrameHandler; // @synthesize receivedFrameHandler=_receivedFrameHandler;
@property(copy, nonatomic) CDUnknownBlockType requestMessageHandler; // @synthesize requestMessageHandler=_requestMessageHandler;
@property(copy, nonatomic) CDUnknownBlockType eventMessageHandler; // @synthesize eventMessageHandler=_eventMessageHandler;
@property(copy, nonatomic) NSString *serviceIdentifier; // @synthesize serviceIdentifier=_serviceIdentifier;
@property(copy, nonatomic) CDUnknownBlockType receivedObjectHandler; // @synthesize receivedObjectHandler=_receivedObjectHandler;
@property(copy, nonatomic) CDUnknownBlockType promptForPINHandler; // @synthesize promptForPINHandler=_promptForPINHandler;
@property(retain, nonatomic) SFDevice *peerDevice; // @synthesize peerDevice=_peerDevice;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
@property(copy, nonatomic) CDUnknownBlockType interruptionHandler; // @synthesize interruptionHandler=_interruptionHandler;
@property(copy, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) CDUnknownBlockType errorHandler; // @synthesize errorHandler=_errorHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (void).cxx_destruct;
- (void)sessionReceivedResponse:(id)arg1;
- (void)sessionReceivedRequest:(id)arg1;
- (void)_sessionReceivedUnencryptedData:(id)arg1 type:(unsigned char)arg2;
- (void)_sessionReceivedEncryptedData:(id)arg1;
- (void)sessionReceivedFrameType:(unsigned char)arg1 data:(id)arg2;
- (void)sessionReceivedEvent:(id)arg1;
- (void)sessionError:(id)arg1;
- (void)_sendEncryptedObject:(id)arg1;
- (void)sendWithFlags:(unsigned int)arg1 object:(id)arg2;
- (void)sendFrameType:(unsigned char)arg1 object:(id)arg2;
- (void)sendFrameType:(unsigned char)arg1 data:(id)arg2;
- (void)sendResponse:(id)arg1;
- (void)sendRequest:(id)arg1;
- (void)sendEvent:(id)arg1;
- (void)_pairVerifyCompleted:(int)arg1;
- (void)_pairVerify:(id)arg1 start:(_Bool)arg2;
- (void)_pairVerifyWithFlags:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)pairVerifyWithFlags:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_pairSetupCompleted:(int)arg1;
- (void)_pairSetupTryPIN:(id)arg1;
- (void)pairSetupTryPIN:(id)arg1;
- (void)_pairSetup:(id)arg1 start:(_Bool)arg2;
- (void)_pairSetupWithFlags:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)pairSetupWithFlags:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_invalidated;
- (void)_invalidate;
- (void)invalidate;
- (void)_interrupted;
- (void)_hearbeatTimer;
- (void)_ensureXPCStarted;
- (void)_activated;
- (void)_activateWithCompletion:(CDUnknownBlockType)arg1;
- (void)activateWithCompletion:(CDUnknownBlockType)arg1;
- (int)setEncryptionReadKey:(const char *)arg1 readKeyLen:(unsigned long long)arg2 writeKey:(const char *)arg3 writeKeyLen:(unsigned long long)arg4;
- (id)description;
- (void)_cleanup;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

